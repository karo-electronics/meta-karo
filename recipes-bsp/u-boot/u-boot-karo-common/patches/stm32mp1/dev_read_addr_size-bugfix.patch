Index: u-boot/drivers/core/of_access.c
===================================================================
--- u-boot.orig/drivers/core/of_access.c
+++ u-boot/drivers/core/of_access.c
@@ -69,12 +69,11 @@ int of_n_addr_cells(const struct device_
 	const __be32 *ip;
 
 	do {
-		if (np->parent)
-			np = np->parent;
 		ip = of_get_property(np, "#address-cells", NULL);
 		if (ip)
 			return be32_to_cpup(ip);
-	} while (np->parent);
+		np = np->parent;
+	} while (np);
 
 	/* No #address-cells property for the root node */
 	return OF_ROOT_NODE_ADDR_CELLS_DEFAULT;
@@ -85,12 +84,11 @@ int of_n_size_cells(const struct device_
 	const __be32 *ip;
 
 	do {
-		if (np->parent)
-			np = np->parent;
 		ip = of_get_property(np, "#size-cells", NULL);
 		if (ip)
 			return be32_to_cpup(ip);
-	} while (np->parent);
+		np = np->parent;
+	} while (np);
 
 	/* No #size-cells property for the root node */
 	return OF_ROOT_NODE_SIZE_CELLS_DEFAULT;
Index: u-boot/drivers/core/of_addr.c
===================================================================
--- u-boot.orig/drivers/core/of_addr.c
+++ u-boot/drivers/core/of_addr.c
@@ -49,9 +49,9 @@ static void of_bus_default_count_cells(c
 				       int *addrc, int *sizec)
 {
 	if (addrc)
-		*addrc = of_n_addr_cells(np);
+		*addrc = of_n_addr_cells(np->parent);
 	if (sizec)
-		*sizec = of_n_size_cells(np);
+		*sizec = of_n_size_cells(np->parent);
 }
 
 static u64 of_bus_default_map(__be32 *addr, const __be32 *range,
@@ -260,7 +260,8 @@ static u64 __of_translate_address(const
 	/* Count address cells & copy address locally */
 	bus->count_cells(dev, &na, &ns);
 	if (!OF_CHECK_COUNTS(na, ns)) {
-		debug("Bad cell count for %s\n", of_node_full_name(dev));
+		pr_err("Bad cell count (na=%u ns=%u) for %s (bus=%s)\n",
+		       na, ns, of_node_full_name(dev), bus->name);
 		goto bail;
 	}
 	memcpy(addr, in_addr, na * 4);
@@ -287,8 +288,8 @@ static u64 __of_translate_address(const
 		pbus = of_match_bus(parent);
 		pbus->count_cells(dev, &pna, &pns);
 		if (!OF_CHECK_COUNTS(pna, pns)) {
-			debug("Bad cell count for %s\n",
-			      of_node_full_name(dev));
+			pr_err("Bad cell count for %s\n",
+			       of_node_full_name(dev));
 			break;
 		}
 
