Index: u-boot/drivers/mmc/mmc-uclass.c
===================================================================
--- u-boot.orig/drivers/mmc/mmc-uclass.c
+++ u-boot/drivers/mmc/mmc-uclass.c
@@ -415,7 +415,7 @@ static int mmc_blk_probe(struct udevice
 
 	ret = mmc_init(mmc);
 	if (ret) {
-		debug("%s: mmc_init() failed (err=%d)\n", __func__, ret);
+		pr_err("%s: mmc_init() failed (err=%d)\n", __func__, ret);
 		return ret;
 	}
 
Index: u-boot/drivers/mmc/mmc.c
===================================================================
--- u-boot.orig/drivers/mmc/mmc.c
+++ u-boot/drivers/mmc/mmc.c
@@ -657,7 +657,7 @@ static int mmc_send_op_cond(struct mmc *
 	/* Some cards seem to need this */
 	mmc_go_idle(mmc);
 
- 	/* Asking to the card its capabilities */
+	/* Asking to the card its capabilities */
 	for (i = 0; i < 2; i++) {
 		err = mmc_send_op_cond_iter(mmc, i != 0);
 		if (err)
@@ -895,7 +895,7 @@ static int mmc_get_capabilities(struct m
 		return 0;
 
 	if (!ext_csd) {
-		pr_err("No ext_csd found!\n"); /* this should enver happen */
+		pr_err("No ext_csd found!\n"); /* this should never happen */
 		return -ENOTSUPP;
 	}
 
@@ -1381,8 +1381,10 @@ static int sd_set_card_speed(struct mmc
 	if (err)
 		return err;
 
-	if (((__be32_to_cpu(switch_status[4]) >> 24) & 0xF) != speed)
+	if (((__be32_to_cpu(switch_status[4]) >> 24) & 0xF) != speed) {
+		pr_err("SD/MMC speed %u not supported\n", speed);
 		return -ENOTSUPP;
+	}
 
 	return 0;
 }
@@ -2053,7 +2055,7 @@ static int mmc_select_mode_and_width(str
 		return 0;
 
 	if (!mmc->ext_csd) {
-		pr_debug("No ext_csd found!\n"); /* this should enver happen */
+		pr_err("No ext_csd found!\n"); /* this should never happen */
 		return -ENOTSUPP;
 	}
 
@@ -2631,7 +2633,6 @@ static int mmc_send_if_cond(struct mmc *
 	cmd.resp_type = MMC_RSP_R7;
 
 	err = mmc_send_cmd(mmc, &cmd, NULL);
-
 	if (err)
 		return err;
 
@@ -2803,7 +2804,7 @@ retry:
 	if (err)
 		return err;
 
-	/* The internal partition reset to user partition(0) at every CMD0*/
+	/* The internal partition reset to user partition(0) at every CMD0 */
 	mmc_get_blk_desc(mmc)->hwpart = 0;
 
 	/* Test for SD version 2 */
@@ -3003,11 +3004,11 @@ static int mmc_probe(bd_t *bis)
 
 int mmc_initialize(bd_t *bis)
 {
-	static int initialized = 0;
+	static int initialized;
 	int ret;
+
 	if (initialized)	/* Avoid initializing mmc multiple times */
 		return 0;
-	initialized = 1;
 
 #if !CONFIG_IS_ENABLED(BLK)
 #if !CONFIG_IS_ENABLED(MMC_TINY)
@@ -3018,11 +3019,11 @@ int mmc_initialize(bd_t *bis)
 	if (ret)
 		return ret;
 
+	mmc_do_preinit();
 #ifndef CONFIG_SPL_BUILD
 	print_mmc_devices(',');
 #endif
-
-	mmc_do_preinit();
+	initialized = 1;
 	return 0;
 }
 
Index: u-boot/drivers/video/video-uclass.c
===================================================================
--- u-boot.orig/drivers/video/video-uclass.c
+++ u-boot/drivers/video/video-uclass.c
@@ -78,11 +78,11 @@ int video_reserve(ulong *addrp)
 	     dev;
 	     uclass_find_next_device(&dev)) {
 		size = alloc_fb(dev, addrp);
-		debug("%s: Reserving %lx bytes at %lx for video device '%s'\n",
+		debug("%s: Reserving %08lx bytes at %08lx for video device '%s'\n",
 		      __func__, size, *addrp, dev->name);
 	}
 	gd->video_bottom = *addrp;
-	debug("Video frame buffers from %lx to %lx\n", gd->video_bottom,
+	debug("Video frame buffers from %08lx to %08lx\n", gd->video_bottom,
 	      gd->video_top);
 
 	return 0;
@@ -271,13 +271,13 @@ static int video_post_probe(struct udevi
 		drv_name = priv->vidconsole_drv_name;
 	ret = device_bind_driver(dev, drv_name, str, &cons);
 	if (ret) {
-		debug("%s: Cannot bind console driver\n", __func__);
+		pr_err("%s: Cannot bind console driver\n", __func__);
 		return ret;
 	}
 
 	ret = device_probe(cons);
 	if (ret) {
-		debug("%s: Cannot probe console driver\n", __func__);
+		pr_err("%s: Cannot probe console driver\n", __func__);
 		return ret;
 	}
 
@@ -302,7 +302,7 @@ static int video_post_bind(struct udevic
 		       dev->name);
 		return -ENOSPC;
 	}
-	debug("%s: Claiming %lx bytes at %lx for video device '%s'\n",
+	debug("%s: Claiming %08lx bytes at %08lx for video device '%s'\n",
 	      __func__, size, addr, dev->name);
 	gd->video_bottom = addr;
 
