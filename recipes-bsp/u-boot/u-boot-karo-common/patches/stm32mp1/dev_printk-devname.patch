Index: u-boot/include/dm/device_compat.h
===================================================================
--- u-boot.orig/include/dm/device_compat.h
+++ u-boot/include/dm/device_compat.h
@@ -38,6 +38,8 @@
  */
 #define dev_printk(dev, fmt, ...)				\
 ({								\
+	if (dev)						\
+		printk("%s: ", dev_read_name(dev));		\
 	printk(fmt, ##__VA_ARGS__);				\
 })
 
Index: u-boot/drivers/phy/phy-stm32-usbphyc.c
===================================================================
--- u-boot.orig/drivers/phy/phy-stm32-usbphyc.c
+++ u-boot/drivers/phy/phy-stm32-usbphyc.c
@@ -309,7 +309,7 @@ static int stm32_usbphyc_of_xlate(struct
 
 	if ((phy->id == 0 && args->args_count != 1) ||
 	    (phy->id == 1 && args->args_count != 2)) {
-		dev_err(dev, "invalid number of cells for phy port%ld\n",
+		dev_err(phy->dev, "invalid number of cells for phy port%ld\n",
 			phy->id);
 		return -EINVAL;
 	}
Index: u-boot/drivers/usb/host/dwc2.c
===================================================================
--- u-boot.orig/drivers/usb/host/dwc2.c
+++ u-boot/drivers/usb/host/dwc2.c
@@ -107,7 +107,8 @@ static void init_fslspclksel(struct dwc2
  * @param regs Programming view of DWC_otg controller.
  * @param num Tx FIFO to flush.
  */
-static void dwc_otg_flush_tx_fifo(struct dwc2_core_regs *regs, const int num)
+static void dwc_otg_flush_tx_fifo(struct dwc2_core_regs *regs, const int num,
+				  struct udevice *dev)
 {
 	int ret;
 
@@ -127,7 +128,8 @@ static void dwc_otg_flush_tx_fifo(struct
  *
  * @param regs Programming view of DWC_otg controller.
  */
-static void dwc_otg_flush_rx_fifo(struct dwc2_core_regs *regs)
+static void dwc_otg_flush_rx_fifo(struct dwc2_core_regs *regs,
+				  struct udevice *dev)
 {
 	int ret;
 
@@ -145,7 +147,8 @@ static void dwc_otg_flush_rx_fifo(struct
  * Do core a soft reset of the core.  Be careful with this because it
  * resets all the internal state machines of the core.
  */
-static void dwc_otg_core_reset(struct dwc2_core_regs *regs)
+static void dwc_otg_core_reset(struct dwc2_core_regs *regs,
+			       struct udevice *dev)
 {
 	int ret;
 
@@ -277,8 +280,8 @@ static void dwc_otg_core_host_init(struc
 	clrbits_le32(&regs->gotgctl, DWC2_GOTGCTL_HSTSETHNPEN);
 
 	/* Make sure the FIFOs are flushed. */
-	dwc_otg_flush_tx_fifo(regs, 0x10);	/* All Tx FIFOs */
-	dwc_otg_flush_rx_fifo(regs);
+	dwc_otg_flush_tx_fifo(regs, 0x10, dev);	/* All Tx FIFOs */
+	dwc_otg_flush_rx_fifo(regs, dev);
 
 	/* Flush out any leftover queued requests. */
 	num_channels = readl(&regs->ghwcfg2);
@@ -299,7 +302,7 @@ static void dwc_otg_core_host_init(struc
 		ret = wait_for_bit_le32(&regs->hc_regs[i].hcchar,
 					DWC2_HCCHAR_CHEN, false, 1000, false);
 		if (ret)
-			dev_info("%s: Timeout!\n", __func__);
+			dev_info(dev, "%s: Timeout!\n", __func__);
 	}
 
 	/* Turn on the vbus power. */
@@ -323,8 +326,9 @@ static void dwc_otg_core_host_init(struc
  *
  * @param regs Programming view of the DWC_otg controller
  */
-static void dwc_otg_core_init(struct dwc2_priv *priv)
+static void dwc_otg_core_init(struct udevice *dev)
 {
+	struct dwc2_priv *priv = dev_get_priv(dev);
 	struct dwc2_core_regs *regs = priv->regs;
 	uint32_t ahbcfg = 0;
 	uint32_t usbcfg = 0;
@@ -353,7 +357,7 @@ static void dwc_otg_core_init(struct dwc
 	writel(usbcfg, &regs->gusbcfg);
 
 	/* Reset the Controller */
-	dwc_otg_core_reset(regs);
+	dwc_otg_core_reset(regs, dev);
 
 	/*
 	 * This programming sequence needs to happen in FS mode before
@@ -412,7 +416,7 @@ static void dwc_otg_core_init(struct dwc
 	writel(usbcfg, &regs->gusbcfg);
 
 	/* Reset after setting the PHY parameters */
-	dwc_otg_core_reset(regs);
+	dwc_otg_core_reset(regs, dev);
 #endif
 
 	usbcfg = readl(&regs->gusbcfg);
@@ -1121,7 +1125,7 @@ int _submit_int_msg(struct dwc2_priv *pr
 	timeout = get_timer(0) + USB_TIMEOUT_MS(pipe);
 	for (;;) {
 		if (get_timer(0) > timeout) {
-			dev_err(dev, "Timeout poll on interrupt endpoint\n");
+			dev_err(dev->dev, "Timeout poll on interrupt endpoint\n");
 			return -ETIMEDOUT;
 		}
 		ret = _submit_bulk_msg(priv, dev, pipe, buffer, len);
@@ -1185,7 +1189,7 @@ static int dwc2_init_common(struct udevi
 	priv->ext_vbus = 0;
 #endif
 
-	dwc_otg_core_init(priv);
+	dwc_otg_core_init(dev);
 	dwc_otg_core_host_init(dev, regs);
 
 	clrsetbits_le32(&regs->hprt0, DWC2_HPRT0_PRTENA |
