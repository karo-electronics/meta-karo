// SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause)
/*
 * Copyright (C) 2020: Lothar Wa√ümann <LW@KARO-electronics.de>
 */

#include "stm32mp151.dtsi"
#include "stm32mp15-pinctrl.dtsi"
#include <dt-bindings/clock/stm32mp1-clksrc.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	aliases {
		display = &lcd_panel;
		ethernet0 = &ethernet0;
		i2c0 = &i2c6;
		mmc0 = &sdmmc2;
		mmc1 = &sdmmc3;
		mmc2 = &sdmmc1;
		serial0 = &uart4;
		serial1 = &usart2;
		serial2 = &usart3;
		spinor0 = &flash0;
		usbh = &usbh_ehci;
		usbotg = &usbotg_hs;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	lcd_backlight: lcd-backlight {
		compatible = "gpio-backlight";
		default-on;
	};

	lcd_panel: panel {
		compatible = "simple-panel";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&txmp_ltdc_pins>;
		pinctrl-1 = <&txmp_ltdc_pins_sleep>;
		backlight = <&lcd_backlight>;
		status = "okay";

		port {
			panel_in: endpoint {
				remote-endpoint = <&ltdc_ep1_out>;
			};
		};

		display-timings {
			native-mode = <&ETV570>;

			VGA {
				clock-frequency = <25200000>;
				hactive = <640>;
				vactive = <480>;
				hback-porch = <48>;
				hsync-len = <96>;
				hfront-porch = <16>;
				vback-porch = <31>;
				vsync-len = <2>;
				vfront-porch = <12>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};

			ETV570: ETV570 {
				u-boot,panel-name = "edt,et057090dhu";
				clock-frequency = <25200000>;
				hactive = <640>;
				vactive = <480>;
				hback-porch = <114>;
				hsync-len = <30>;
				hfront-porch = <16>;
				vback-porch = <32>;
				vsync-len = <3>;
				vfront-porch = <10>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};

			ET0350 {
				u-boot,panel-name = "edt,et0350g0dh6";
				clock-frequency = <6413760>;
				hactive = <320>;
				vactive = <240>;
				hback-porch = <34>;
				hsync-len = <34>;
				hfront-porch = <20>;
				vback-porch = <15>;
				vsync-len = <3>;
				vfront-porch = <4>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};

			ET0430 {
				u-boot,panel-name = "edt,et0430g0dh6";
				clock-frequency = <9009000>;
				hactive = <480>;
				vactive = <272>;
				hback-porch = <2>;
				hsync-len = <41>;
				hfront-porch = <2>;
				vback-porch = <2>;
				vsync-len = <10>;
				vfront-porch = <2>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <1>;
			};

			ET0500 {
				clock-frequency = <33264000>;
				hactive = <800>;
				vactive = <480>;
				hback-porch = <88>;
				hsync-len = <128>;
				hfront-porch = <40>;
				vback-porch = <33>;
				vsync-len = <2>;
				vfront-porch = <10>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};

			ET0700 { /* same as ET0500 */
				u-boot,panel-name = "edt,etm0700g0dh6";
				clock-frequency = <33264000>;
				hactive = <800>;
				vactive = <480>;
				hback-porch = <88>;
				hsync-len = <128>;
				hfront-porch = <40>;
				vback-porch = <33>;
				vsync-len = <2>;
				vfront-porch = <10>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};

			ETQ570 {
				clock-frequency = <6596040>;
				hactive = <320>;
				vactive = <240>;
				hback-porch = <38>;
				hsync-len = <30>;
				hfront-porch = <30>;
				vback-porch = <16>;
				vsync-len = <3>;
				vfront-porch = <4>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
				pixelclk-active = <0>;
			};
		};
	};

	leds {
		compatible = "gpio-leds";

		module_led: module-led {
			pinctrl-names = "default", "sleep";
			label = "Heartbeat";
			default-state = "on";
			linux,default-trigger = "heartbeat";
		};
	};

	reg_3v3: regulator-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		mcuram2: mcuram2@10000000 {
			compatible = "shared-dma-pool";
			reg = <0x10000000 0x40000>;
			no-map;
		};

		vdev0vring0: vdev0vring0@10040000 {
			compatible = "shared-dma-pool";
			reg = <0x10040000 0x1000>;
			no-map;
		};

		vdev0vring1: vdev0vring1@10041000 {
			compatible = "shared-dma-pool";
			reg = <0x10041000 0x1000>;
			no-map;
		};

		vdev0buffer: vdev0buffer@10042000 {
			compatible = "shared-dma-pool";
			reg = <0x10042000 0x4000>;
			no-map;
		};

		mcuram: mcuram@30000000 {
			compatible = "shared-dma-pool";
			reg = <0x30000000 0x40000>;
			no-map;
		};

		retram: retram@38000000 {
			compatible = "shared-dma-pool";
			reg = <0x38000000 0x10000>;
			no-map;
		};
	};
};

&bsec {
	status = "okay";
};

&ethernet0 {
	pinctrl-names = "default", "sleep";
	phy-handle = <&phy0>;
	clock-names = "stmmaceth", "mac-clk-tx", "mac-clk-rx",
		      "ethstp", "syscfg-clk", "eth-ck";
	clocks = <&rcc ETHMAC &rcc ETHTX &rcc ETHRX
		  &rcc ETHSTP &rcc SYSCFG &rcc ETHCK_K>;
	status = "okay";

	mdio0: mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";
	};
};

&i2c6 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c6_pins>;
	pinctrl-1 = <&i2c6_sleep_pins>;
	status = "okay";
};

&ipcc {
	status = "okay";
};

&iwdg2 {
	timeout-sec = <0>;
	status = "okay";
};

&ltdc {
	status = "okay";

	port {
		ltdc_ep1_out: endpoint {
			remote-endpoint = <&panel_in>;
		};
	};
};

&m4_rproc {
	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
			<&vdev0vring1>, <&vdev0buffer>;
	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
	mbox-names = "vq0", "vq1", "shutdown";
	interrupt-parent = <&exti>;
	interrupts = <68 1>;
	wakeup-source;
	status = "okay";
};

&pwr_regulators {
	pwr-supply = <&reg_3v3>;
};

&usb33 {
	usb33d-supply = <&reg18>;
};

&qspi {
	pinctrl-names = "default";
	pinctrl-0 = <&quadspi_pins>;
	reg = <0x58003000 0x1000>, <0x70000000 0x1000000>;
	status = "okay";

	flash0: spi-flash@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "gd25q16c", "spi-flash";
		reg = <0>;
		spi-rx-bus-width = <2>;
		spi-max-frequency = <104000000>;
		memory-map = <0x90000000 0x1000000>;
	};
};

&rng1 {
	status = "okay";
};

&rtc {
	status = "okay";
};

&sdmmc2 {
	vmmc-supply = <&reg_3v3>;
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
	status = "okay";
};

&usbh_ehci {
	phy-names = "usb";
	phys = <&usbphyc_port0>;
	status = "okay";
};

&usbotg_hs {
	dr_mode = "peripheral";
	phy-names = "usb2-phy";
	phys = <&usbphyc_port1 0>;
	u-boot,force-b-session-valid;
	hnp-srp-disable;
	status = "okay";
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	phy-supply = <&reg_3v3>;
};

&usbphyc_port1 {
	phy-supply = <&reg_3v3>;
};

&pinctrl {
	ethernet0_rmii_pins: ethernet0-rmii-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('G', 8, AF2)	/* ETH_CLK */
				  STM32_PINMUX('C', 1, AF11)	/* ETH_MDC */
				  STM32_PINMUX('A', 2, AF11)	/* ETH_MDIO */
				  STM32_PINMUX('B', 11, AF11)	/* ETH_RMII_TX_EN */
				  STM32_PINMUX('G', 13, AF11)	/* ETH_RMII_TXD0 */
				  STM32_PINMUX('G', 14, AF11)	/* ETH_RMII_TXD1 */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};

		pins2 {
			pinmux = <
				  STM32_PINMUX('C', 4, AF11) /* ETH_RMII_RXD0 */
				  STM32_PINMUX('C', 5, AF11) /* ETH_RMII_RXD1 */
				  STM32_PINMUX('A', 7, AF11) /* ETH_RMII_CRS_DV */
			>;
			bias-disable;
		};
	};

	ethernet0_rmii_pins_sleep: rmii-pins-sleep {
		pins1 {
			pinmux = <
				  STM32_PINMUX('G', 8, ANALOG) /* ETH_CLK */
				  STM32_PINMUX('G', 13, ANALOG) /* ETH_RMII_TXD0 */
				  STM32_PINMUX('G', 14, ANALOG) /* ETH_RMII_TXD1 */
				  STM32_PINMUX('B', 11, ANALOG) /* ETH_RMII_TX_EN */
				  STM32_PINMUX('A', 2, ANALOG) /* ETH_MDIO */
				  STM32_PINMUX('C', 1, ANALOG) /* ETH_MDC */
				  STM32_PINMUX('C', 4, ANALOG) /* ETH_RMII_RXD0 */
				  STM32_PINMUX('C', 5, ANALOG) /* ETH_RMII_RXD1 */
				  STM32_PINMUX('A', 7, ANALOG) /* ETH_RMII_CRS_DV */
			>;
		};
	};

	i2c6_pins: i2c6-pins {
		pins {
			pinmux = <
				 STM32_PINMUX('A', 11, AF2) /* I2C6_SCL */
				 STM32_PINMUX('A', 12, AF2) /* I2C6_SDA */
			>;
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	i2c6_sleep_pins: i2c6-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('A', 11, ANALOG) /* I2C6_SCL */
				  STM32_PINMUX('A', 12, ANALOG) /* I2C6_SDA */
			>;
		};
	};

	quadspi_pins: quadspi-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('B', 6, AF10)	/* QUADSPI_BK1_NCS */
				  STM32_PINMUX('F', 9, AF10)	/* QUADSPI_BK1_IO1 */
				  STM32_PINMUX('F', 8, AF10)	/* QUADSPI_BK1_IO0 */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('F', 10, AF9)>; /* QUADSPI_CLK */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	spi2_pins: spi2-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('B', 12, AF5) /* SPI2_NSS */
				  STM32_PINMUX('C', 3, AF5) /* SPI2_MOSI */
				  STM32_PINMUX('C', 2, AF5) /* SPI2_MISO */
				  STM32_PINMUX('A', 9, AF5) /* SPI2_SCK */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	spi2_sleep_pins: spi2-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('B', 12, ANALOG) /* SPI2_NSS */
				  STM32_PINMUX('C', 3, ANALOG) /* SPI2_MOSI */
				  STM32_PINMUX('C', 2, ANALOG) /* SPI2_MISO */
				  STM32_PINMUX('A', 9, ANALOG) /* SPI2_SCK */
			>;
		};
	};

	uart4_pins: uart4-pins {
		pins1 {
			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
			bias-pull-up;
		};

		pins2 {
			pinmux = <STM32_PINMUX('G', 11, AF6)>; /* UART4_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};
};
