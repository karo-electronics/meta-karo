--- a/board/karo/common/fdt.c	2022-08-15 10:19:27.475514262 +0200
+++ b/board/karo/common/fdt.c	2022-08-15 10:19:27.475514262 +0200
@@ -14,6 +14,7 @@
 #include <mtd_node.h>
 #include <of_live.h>
 #include <ubi_uboot.h>
+#include <asm/cache.h>
 #include <dm/of_access.h>
 #include <linux/libfdt.h>
 #include "karo.h"
@@ -101,6 +102,156 @@ static void *karo_fdt_load_dtb(unsigned
 	return fdt;
 }
 
+static const char *karo_fdt_overlay_filename(const char *_fdt_file,
+					     const char *baseboard)
+{
+	const char *fdt_file = "stm32mp15";
+	size_t malloc_size = strlen(fdt_file) + strlen(baseboard) + 6;
+	char *fdtfile = malloc(malloc_size);
+	const char *pfx_end;
+	size_t pos;
+
+	if (!fdtfile)
+		return NULL;
+
+	strcpy(fdtfile, fdt_file);
+	pfx_end = strchrnul(fdtfile, '-');
+	pos = pfx_end - fdtfile;
+	snprintf(&fdtfile[pos], malloc_size - pos, "%s%s.dtb",
+		 *pfx_end == '-' ? "" : "-", baseboard);
+
+	return fdtfile;
+}
+
+int karo_load_fdt_overlay(void *fdt,
+			  const char *dev_type, const char *dev_part,
+			  const char *fdt_file, const char *baseboard)
+{
+	int ret;
+	loff_t size;
+	void *fdto;
+	const char *filename = karo_fdt_overlay_filename(fdt_file, baseboard);
+
+	if (!filename)
+		return -ENOMEM;
+
+	printf("Loading FDT overlay for '%s' from %s %s '%s'\n", baseboard,
+	       dev_type, dev_part, filename);
+
+	if (!file_exists(dev_type, dev_part, filename, FS_TYPE_ANY)) {
+		printf("'%s' does not exist\n", filename);
+		ret = -ENOENT;
+		goto free_fn;
+	}
+	if (fs_set_blk_dev(dev_type, dev_part, FS_TYPE_ANY)) {
+		ret = -ENOENT;
+		goto free_fn;
+	}
+
+	ret = fs_size(filename, &size);
+	if (ret)
+		goto free_fn;
+
+	fdto = memalign(ARCH_DMA_MINALIGN, size);
+	if (!fdto) {
+		printf("%s@%d: failed to allocate %llu bytes for '%s'\n",
+		       __func__, __LINE__, size, filename);
+		ret = -ENOMEM;
+		goto free_fn;
+	}
+
+	debug("%s@%d: reading %llu bytes from '%s'\n", __func__, __LINE__,
+	      size, filename);
+
+	if (fs_set_blk_dev(dev_type, dev_part, FS_TYPE_ANY)) {
+		ret = -ENOENT;
+		goto free_buf;
+	}
+	ret = fs_read(filename, (ulong)fdto, 0, 0, &size);
+	if (ret)
+		goto free_buf;
+
+	debug("Read %llu byte from '%s'\n", size, filename);
+	fdt_shrink_to_minimum(fdt, size);
+	ret = fdt_overlay_apply_verbose(fdt, fdto);
+	if (ret) {
+		printf("Failed to load FDT overlay from '%s': %s\n",
+		       filename, fdt_strerror(ret));
+		ret = -EINVAL;
+	}
+
+ free_buf:
+	free(fdto);
+
+ free_fn:
+	free((void *)filename);
+	return ret;
+}
+
+int karo_fdt_get_overlays(const char *baseboard, char **overlays)
+{
+	int ret;
+
+	if (baseboard) {
+		const char *prefix = "overlays_";
+		size_t malloc_size = strlen(prefix) + strlen(baseboard) + 1;
+		char *overlay_var = malloc(malloc_size);
+
+		if (!overlay_var)
+			return -ENOMEM;
+		ret = snprintf(overlay_var, malloc_size, "%s%s",
+			       prefix, baseboard);
+		if (ret < 0 || ret >= malloc_size) {
+			free(overlay_var);
+			return ret < 0 ? ret : -ENOMEM;
+		}
+		*overlays = env_get(overlay_var);
+		free(overlay_var);
+		if (*overlays) {
+			if (strstr(*overlays, "setenv overlays"))
+				*overlays += strlen("setenv overlays ");
+		}
+	} else {
+		*overlays = env_get("overlays");
+	}
+	return 0;
+}
+
+void karo_fdt_apply_overlays(unsigned long fdt_addr)
+{
+	int ret;
+	const char *baseboard = env_get("baseboard");
+	const char *dev_type = "mmc";
+	const char *dev_part = env_get("bootpart");
+	const char *fdt_file = env_get("dtbfile");
+	char *overlays;
+
+	ret = karo_fdt_get_overlays(baseboard, &overlays);
+	if (ret == 0 && overlays) {
+		char *overlay_list = strdup(overlays);
+		const char *overlay_listp = overlay_list;
+		char *overlay;
+
+		debug("Loading FDT overlays for '%s': %s\n", baseboard, overlays);
+		while ((overlay = strsep(&overlay_list, ", "))) {
+			if (!strlen(overlay))
+				continue;
+			ret = karo_load_fdt_overlay((void *)fdt_addr, dev_type,
+						    dev_part, fdt_file, overlay);
+			if (ret) {
+				printf("Failed to load '%s' FDT overlay: %d\n",
+				       overlay, ret);
+				break;
+			}
+		}
+		free((void *)overlay_listp);
+	} else if (ret) {
+		printf("Failed to load FDT overlays: %d\n", ret);
+	} else {
+		printf("No FDT overlays to be loaded\n");
+	}
+}
+
 void karo_fdt_move_fdt(void)
 {
 	void *fdt;
@@ -143,6 +284,8 @@ void karo_fdt_move_fdt(void)
 		      fdt_addr, fdt_addr + fdt_totalsize(fdt) - 1);
 		memmove((void *)fdt_addr, fdt, fdt_totalsize(fdt));
 	}
+	karo_fdt_apply_overlays(fdt_addr);
+	fdt_shrink_to_minimum(fdt, 4096);
 	set_working_fdt_addr(fdt_addr);
 	debug("fdt_addr set to %08lx\n", fdt_addr);
 
