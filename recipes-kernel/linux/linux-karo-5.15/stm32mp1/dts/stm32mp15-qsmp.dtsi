// SPDX-License-Identifier: (GPL-2.0 OR BSD-3-Clause)
/*
 * Copyright (C) 2020 Lothar Wa√ümann <LW@KARO-electronics.de>
 */

/ {
	aliases {
		i2c1 = &i2c2;
		i2c2 = &i2c1;
		mmc1 = &sdmmc1;
		serial1 = &usart3;
		serial2 = &usart2;
	};

	regulator-etn-3v3 {
		compatible = "fixed-regulator";
		regulator-name = "etn-phy";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-gpios = <&gpioa 4 GPIO_ACTIVE_LOW>;
		regulator-always-on;
	};
};

&adc {
	vdd-supply = <&reg_3v3>;
	vdda-supply = <&reg_3v3>;
	vref-supply = <&vrefbuf>;
	status = "okay";
};

&adc2 {
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qsmp_i2c1_pins>;
	pinctrl-1 = <&qsmp_i2c1_sleep_pins>;
	clock-frequency = <400000>;
};

&i2c2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qsmp_i2c2_pins_z>;
	pinctrl-1 = <&qsmp_i2c2_sleep_pins_z>;
	clock-frequency = <400000>;
	status = "okay";
};

&module_led {
	gpios = <&gpioa 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&qsmp_sdmmc1_pins>;
	pinctrl-1 = <&qsmp_sdmmc1_opendrain_pins>;
	pinctrl-2 = <&qsmp_sdmmc1_sleep_pins>;
	bus-width = <4>;
	vmmc-supply = <&reg_3v3>;
	cd-gpios = <&gpiob 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	no-1-8-v;
	st,neg-edge;
	status = "disabled";
};

&sdmmc2 {
	/* eMMC */
	pinctrl-0 = <&qsmp_sdmmc2_pins>;
	pinctrl-1 = <&qsmp_sdmmc2_opendrain_pins>;
	pinctrl-2 = <&qsmp_sdmmc2_sleep_pins>;
	bus-width = <8>;
};

&spi4 {
	pinctrl-names = "default";
	pinctrl-0 = <&qsmp_spi4_pins>;
	pinctrl-1 = <&qsmp_spi4_sleep_pins>;
	cs-gpios = <&gpioe 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	status = "okay";
};

&spi6 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qsmp_spi6_pins &qsmp_spi6_pins_z>;
	pinctrl-1 = <&qsmp_spi6_sleep_pins &qsmp_spi6_sleep_pins_z>;
	cs-gpios = <&gpioz 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	status = "okay";
};

&timers2 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
};

&usart2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qsmp_usart2_pins>;
	pinctrl-1 = <&qsmp_usart2_sleep_pins>;
	rts-gpios = <&gpiod 4 GPIO_ACTIVE_LOW>;
	cts-gpios = <&gpiod 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	/delete-property/ dma-names;
	/delete-property/ dmas;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qsmp_usart3_pins>;
	pinctrl-1 = <&qsmp_usart3_sleep_pins>;
	/delete-property/ dma-names;
	/delete-property/ dmas;
	status = "okay";
};

&vrefbuf {
	regulator-min-microvolt = <2500000>;
	regulator-max-microvolt = <2500000>;
	vdda-supply = <&reg_3v3>;
	status = "okay";
};

&pinctrl {
	qsmp_i2c1_pins: qsmp_i2c1-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('D', 12, AF5) /* I2C1_SCL */
				  STM32_PINMUX('F', 15, AF5) /* I2C1_SDA */
			>;
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	qsmp_i2c1_sleep_pins: qsmp_i2c1-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('D', 12, ANALOG) /* I2C1_SCL */
				  STM32_PINMUX('F', 15, ANALOG) /* I2C1_SDA */
			>;
		};
	};

	qsmp_sdmmc1_pins: qsmp-sdmmc1-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('D', 2, AF12)	/* SDMMC1_CMD */
				  STM32_PINMUX('C', 8, AF12)	/* SDMMC1_D0 */
				  STM32_PINMUX('C', 9, AF12)	/* SDMMC1_D1 */
				  STM32_PINMUX('C', 10, AF12)	/* SDMMC1_D2 */
				  STM32_PINMUX('C', 11, AF12)	/* SDMMC1_D3 */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	qsmp_sdmmc1_opendrain_pins: qsmp-sdmmc1-opendrain-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('C', 8, AF12)	/* SDMMC1_D0 */
				  STM32_PINMUX('C', 9, AF12)	/* SDMMC1_D1 */
				  STM32_PINMUX('C', 10, AF12)	/* SDMMC1_D2 */
				  STM32_PINMUX('C', 11, AF12)	/* SDMMC1_D3 */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
			bias-disable;
			drive-open-drain;
			slew-rate = <1>;
		};

		pins3 {
			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <2>;
		};
	};

	qsmp_sdmmc1_sleep_pins: sdmmc1-sleep-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('D', 2, ANALOG)	/* SDMMC1_CMD */
				  STM32_PINMUX('C', 8, ANALOG)	/* SDMMC1_D0 */
				  STM32_PINMUX('C', 9, ANALOG)	/* SDMMC1_D1 */
				  STM32_PINMUX('C', 10, ANALOG)	/* SDMMC1_D2 */
				  STM32_PINMUX('C', 11, ANALOG)	/* SDMMC1_D3 */
				  STM32_PINMUX('C', 12, ANALOG)	/* SDMMC1_CK */
			>;
		};
	};

	qsmp_sdmmc2_pins: qsmp-sdmmc2-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
				  STM32_PINMUX('A', 8, AF9)	/* SDMMC2_D4 */
				  STM32_PINMUX('B', 9, AF10)	/* SDMMC2_D5 */
				  STM32_PINMUX('C', 6, AF10)	/* SDMMC2_D6 */
				  STM32_PINMUX('C', 7, AF10)	/* SDMMC2_D7 */
				  STM32_PINMUX('G', 6, AF10)	/* SDMMC2_CMD */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <3>;
		};
	};

	qsmp_sdmmc2_opendrain_pins: qsmp-sdmmc2-opendrain-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('B', 14, AF9)	/* SDMMC2_D0 */
				  STM32_PINMUX('B', 15, AF9)	/* SDMMC2_D1 */
				  STM32_PINMUX('B', 3, AF9)	/* SDMMC2_D2 */
				  STM32_PINMUX('B', 4, AF9)	/* SDMMC2_D3 */
				  STM32_PINMUX('A', 8, AF9)	/* SDMMC2_D4 */
				  STM32_PINMUX('B', 9, AF10)	/* SDMMC2_D5 */
				  STM32_PINMUX('C', 6, AF10)	/* SDMMC2_D6 */
				  STM32_PINMUX('C', 7, AF10)	/* SDMMC2_D7 */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('G', 6, AF10)>;	/* SDMMC2_CMD */
			bias-disable;
			drive-open-drain;
			slew-rate = <1>;
		};

		pins3 {
			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
			bias-disable;
			drive-push-pull;
			slew-rate = <3>;
		};
	};

	qsmp_sdmmc2_sleep_pins: qsmp-sdmmc2-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('B', 14, ANALOG)	/* SDMMC2_D0 */
				  STM32_PINMUX('B', 15, ANALOG)	/* SDMMC2_D1 */
				  STM32_PINMUX('B', 3, ANALOG)	/* SDMMC2_D2 */
				  STM32_PINMUX('B', 4, ANALOG)	/* SDMMC2_D3 */
				  STM32_PINMUX('A', 8, ANALOG)	/* SDMMC2_D4 */
				  STM32_PINMUX('B', 9, ANALOG)	/* SDMMC2_D5 */
				  STM32_PINMUX('C', 6, ANALOG)	/* SDMMC2_D6 */
				  STM32_PINMUX('C', 7, ANALOG)	/* SDMMC2_D7 */
				  STM32_PINMUX('G', 6, ANALOG)	/* SDMMC2_CMD */
				  STM32_PINMUX('E', 3, ANALOG)	/* SDMMC2_CK */
			>;
		};
	};

	qsmp_spi4_pins: qsmp-spi4-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('E', 2, AF5) /* SPI4_SCK */
				  STM32_PINMUX('E', 5, AF5) /* SPI4_MISO */
				  STM32_PINMUX('E', 14, AF5) /* SPI4_MOSI */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	qsmp_spi4_sleep_pins: qsmp-spi4-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('E', 2, ANALOG) /* SPI4_SCK */
				  STM32_PINMUX('E', 5, ANALOG) /* SPI4_MISO */
				  STM32_PINMUX('E', 14, ANALOG) /* SPI4_MOSI */
			>;
		};
	};


	qsmp_spi6_pins: qsmp-spi6-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('A', 6, AF8) /* SPI6_MISO */
				  STM32_PINMUX('A', 5, AF8) /* SPI6_SCK */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	qsmp_spi6_sleep_pins: qsmp-spi6-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('A', 6, ANALOG) /* SPI6_MISO */
				  STM32_PINMUX('A', 5, ANALOG) /* SPI6_SCK */
			>;
		};
	};

	qsmp_usart2_pins: qsmp-usart2-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('D', 6, AF7) /* USART2_RX */
			>;
			bias-pull-up;
		};

		pins2 {
			pinmux = <
				  STM32_PINMUX('D', 5, AF7) /* USART2_TX */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	qsmp_usart2_rtscts_pins: qsmp-usart2-rtscts-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('D', 3, AF7) /* USART2_CTS */
			>;
			bias-pull-up;
		};

		pins2 {
			pinmux = <
				  STM32_PINMUX('D', 4, AF7) /* USART2_RTS */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	qsmp_usart2_sleep_pins: usart2-qsmp-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('D', 5, ANALOG) /* USART2_TX */
				  STM32_PINMUX('D', 6, ANALOG) /* USART2_RX */
			>;
		};
	};

	qsmp_usart2_rtscts_sleep_pins: qsmp-usart2-rtscts-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('D', 3, ANALOG) /* USART2_CTS */
				  STM32_PINMUX('D', 4, ANALOG) /* USART2_RTS */
			>;
		};
	};

	qsmp_usart3_pins: qsmp-usart3-pins {
		pins1 {
			pinmux = <STM32_PINMUX('B', 10, AF7)>; /* USART3_TX */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('B', 12, AF8)>; /* USART3_RX */
			bias-pull-up;
		};
	};

	qsmp_usart3_sleep_pins: qsmp-usart3-sleep-pins {
		pins {
			pinmux = <STM32_PINMUX('B', 10, ANALOG) /* USART3_TX */
				  STM32_PINMUX('B', 12, ANALOG) /* USART3_RX */
			>;
		};
	};
};

&pinctrl_z {
	qsmp_i2c2_pins_z: qsmp_i2c2-pins-z {
		pins {
			pinmux = <
				  STM32_PINMUX('Z', 0, AF3) /* I2C2_SCL */
				  STM32_PINMUX('Z', 1, AF3) /* I2C2_SDA */
			>;
			bias-disable;
			drive-open-drain;
			slew-rate = <0>;
		};
	};

	qsmp_i2c2_sleep_pins_z: qsmp_i2c2-sleep-pins-z {
		pins {
			pinmux = <
				  STM32_PINMUX('Z', 0, ANALOG) /* I2C2_SCL */
				  STM32_PINMUX('Z', 1, ANALOG) /* I2C2_SDA */
			>;
		};
	};

	qsmp_spi6_pins_z: qsmp-spi6-pins-z {
		pins {
			pinmux = <
				  STM32_PINMUX('Z', 2, AF8) /* SPI6_MOSI */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};
	};

	qsmp_spi6_sleep_pins_z: qsmp-spi6-sleep-pins-z {
		pins {
			pinmux = <
				  STM32_PINMUX('Z', 2, ANALOG) /* SPI6_MOSI */
			>;
		};
	};
};
