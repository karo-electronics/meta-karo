diff --git a/drivers/usb/core/phy.c b/drivers/usb/core/phy.c
index 746615aa1b2d..d62fbacb115c 100644
--- a/drivers/usb/core/phy.c
+++ b/drivers/usb/core/phy.c
@@ -215,13 +215,18 @@ int usb_phy_roothub_suspend(struct device *controller_dev,
 			    struct usb_phy_roothub *phy_roothub,
 			    unsigned wakeup_enabled_descendants)
 {
+	int err;
+
 	/* keep the PHYs initialized so the device can wake up the system */
 	if (device_may_wakeup(controller_dev) || wakeup_enabled_descendants)
 		return 0;
 
-	usb_phy_roothub_power_off(phy_roothub);
+	err = usb_phy_roothub_exit(phy_roothub);
+	if (err)
+		return err;
 
-	return usb_phy_roothub_exit(phy_roothub);
+	usb_phy_roothub_power_off(phy_roothub);
+	return 0;
 }
 EXPORT_SYMBOL_GPL(usb_phy_roothub_suspend);
 
@@ -229,20 +234,20 @@ int usb_phy_roothub_resume(struct device *controller_dev,
 			   struct usb_phy_roothub *phy_roothub,
 			   unsigned wakeup_enabled_descendants)
 {
-	int err = 0;
+	int err;
 
 	/* if the device can't wake up the system _exit was called */
-	if (!device_may_wakeup(controller_dev) && !wakeup_enabled_descendants) {
-		err = usb_phy_roothub_init(phy_roothub);
-		if (err)
-			return err;
+	if (device_may_wakeup(controller_dev) || wakeup_enabled_descendants)
+		return 0;
 
-		err = usb_phy_roothub_power_on(phy_roothub);
-	}
+	err = usb_phy_roothub_power_on(phy_roothub);
+	if (err)
+		return err;
 
-	/* undo _init if _power_on failed */
-	if (err && !device_may_wakeup(controller_dev) && !wakeup_enabled_descendants)
-		usb_phy_roothub_exit(phy_roothub);
+	err = usb_phy_roothub_init(phy_roothub);
+	/* undo _power_on if _init failed */
+	if (err)
+		usb_phy_roothub_power_off(phy_roothub);
 
 	return err;
 }
