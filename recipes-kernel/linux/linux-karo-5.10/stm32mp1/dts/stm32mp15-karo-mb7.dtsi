// SPDX-License-Identifier: (GPL-2.0 OR BSD-3-Clause)

/ {
	mclk: codec-mclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <26000000>;
	};

	reg_2v5: regulator-2v5 {
		compatible = "regulator-fixed";
		regulator-name = "2v5";
		regulator-min-microvolt = <2500000>;
		regulator-max-microvolt = <2500000>;
		regulator-always-on;
	};

	sound {
		compatible = "karo,stm32mp15-sgtl5000",
			     "audio-graph-card";
		label = "TXMP-SGTL5000";
		widgets =
			"Microphone", "Mic Jack",
			"Line", "Line In",
			"Line", "Line Out",
			"Headphone", "Headphone Jack";
		routing =
			"MIC_IN", "Mic Jack",
			"Mic Jack", "Mic Bias",
			"Headphone Jack", "HP_OUT";
		dais = <&sai2a_port>;
		status = "okay";
	};
};

&i2c6 {
	status = "okay";

	sgtl5000: codec@a {
		compatible = "fsl,sgtl5000";
		#sound-dai-cells = <0>;
		reg = <0xa>;
		VDDA-supply = <&reg_2v5>;
		VDDIO-supply = <&reg_3v3>;
		clocks = <&mclk>;
		status = "okay";

		port {
			sgtl5000_in: endpoint {
				remote-endpoint = <&sai2_out>;
			};
		};
	};

	polytouch: touchpanel@38 {
		compatible = "edt,edt-ft5x06";
		reg = <0x38>;
		interrupt-parent = <&gpiod>;
		interrupts = <6 IRQ_TYPE_EDGE_FALLING>;
		reset-gpios = <&gpiod 14 GPIO_ACTIVE_LOW>; /* Pin 149 */
		wake-gpios = <&gpioe 2 GPIO_ACTIVE_HIGH>; /* Pin 152 */
		wakeup-source;
		status = "okay";
	};

	rtc_i2c: rtc@6f {
		compatible = "microchip,mcp7940x";
		reg = <0x6f>;
		status = "okay";
	};
};

&sai2 {
	clocks = <&rcc SAI2>, <&rcc PLL3_Q>, <&rcc PLL3_R>;
	clock-names = "pclk", "x8k", "x11k";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&txmp_sai2_pins>;
	pinctrl-1 = <&txmp_sai2_sleep_pins>;
	status = "okay";
};

&sai2a {
	#clock-cells = <0>;
	dma-names = "tx";
	status = "okay";

	sai2a_port: port {
		sai2_out: endpoint {
			remote-endpoint = <&sgtl5000_in>;
			dai-format = "i2s";
			bitclock-master = <&sgtl5000>;
			mclk-fs = <256>;
		};
	};
};

&sdmmc3 {
	/* not usable due to pinswap of SDMMC3_CMD and SDMMC3_D0 */
	status = "disabled";
};

&pinctrl {
	txmp_sai2_pins: txmp-sai2-pins {
		pins1 {
			pinmux = <
				  STM32_PINMUX('D', 11, AF10)	/* TXD */
				  STM32_PINMUX('D', 12, AF10)	/* FS */
			>;
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};

		pins2 {
			pinmux = <
				  STM32_PINMUX('A', 0, AF10)	/* RXD */
				  STM32_PINMUX('D', 13, AF10)	/* SCK */
			>;
		};
	};

	txmp_sai2_sleep_pins: txmp-sai2-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('A', 0, ANALOG)	/* RXD */
				  STM32_PINMUX('D', 11, ANALOG)	/* TXD */
				  STM32_PINMUX('D', 13, ANALOG)	/* SCK */
				  STM32_PINMUX('D', 12, ANALOG)	/* FS */
			>;
		};
	};
};
