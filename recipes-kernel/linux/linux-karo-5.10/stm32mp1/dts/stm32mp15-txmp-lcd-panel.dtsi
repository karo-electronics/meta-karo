// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
/*
 * Copyright (C) 2020 Lothar Wa√ümann <LW@KARO-electronics.de>
 */

/ {
	aliases {
		display = &lcd_panel;
	};

	lcd_backlight: lcd-backlight {
		compatible = "pwm-backlight";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&txmp_pwm1_pins>;
		pinctrl-1 = <&txmp_pwm1_sleep_pins>;
		pwms = <&txmp_pwm1 2 500000 PWM_POLARITY_INVERTED>;
		brightness-levels = < 1  2  3  4  5  6  7  8  9  10
				     11 12 13 14 15 16 17 18 19  20
				     21 22 23 24 25 26 27 28 29  30
				     31 32 33 34 35 36 37 38 39  40
				     41 42 43 44 45 46 47 48 49  50
				     51 52 53 54 55 56 57 58 59  60
				     61 62 63 64 65 66 67 68 69  70
				     71 72 73 74 75 76 77 78 79  80
				     81 82 83 84 85 86 87 88 89  90
				     91 92 93 94 95 96 97 98 99 100
				    >;
		default-brightness-level = <50>;
	};

	lcd_panel: panel {
		compatible = "panel-dpi";
		pinctrl-0 = <&txmp_ltdc_pins>;
		pinctrl-1 = <&txmp_ltdc_sleep_pins>;
		backlight = <&lcd_backlight>;
		enable-gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpioe 1 GPIO_ACTIVE_HIGH>;
		power-supply = <&reg_3v3>;
		data-mapping = "rgb24";
		status = "okay";

		panel-timing {
			clock-frequency = <25200000>;
			hactive = <640>;
			vactive = <480>;
			hback-porch = <114>;
			hsync-len = <30>;
			hfront-porch = <16>;
			vback-porch = <32>;
			vsync-len = <3>;
			vfront-porch = <10>;
			hsync-active = <0>;
			vsync-active = <0>;
			de-active = <1>;
			pixelclk-active = <1>;
		};

		port@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;

			lcd_panel_from_ltdc_ep1: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&ltdc_ep1_to_lcd_panel>;
			};
		};
	};
};

&ltdc {
	status = "okay";

	port@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0>;

		ltdc_ep1_to_lcd_panel: endpoint@0 {
			reg = <0>;
			remote-endpoint = <&lcd_panel_from_ltdc_ep1>;
		};
	};
};

&timers1 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "okay";

	txmp_pwm1: pwm {
		status = "okay";
	};

	timer@1 {
		status = "okay";
	};
};

&pinctrl {
	txmp_ltdc_pins: txmp-ltdc-pins {
		pins1 {
			pinmux = <
				  /* LCD_R0 is not connected! */
				  STM32_PINMUX('G',  9, AF14) /* LCD_R1 */
				  STM32_PINMUX('C', 10, AF14) /* LCD_R2 */
				  STM32_PINMUX('B',  0,  AF9) /* LCD_R3 */
				  STM32_PINMUX('A',  5, AF14) /* LCD_R4 */
				  STM32_PINMUX('C',  0, AF14) /* LCD_R5 */
				  STM32_PINMUX('B',  1,  AF9) /* LCD_R6 */
				  STM32_PINMUX('E', 15, AF14) /* LCD_R7 */
				  STM32_PINMUX('E', 14, AF13) /* LCD_G0 */
				  STM32_PINMUX('E',  6, AF14) /* LCD_G1 */
				  STM32_PINMUX('A',  6, AF14) /* LCD_G2 */
				  STM32_PINMUX('E', 11, AF14) /* LCD_G3 */
				  STM32_PINMUX('B', 10, AF14) /* LCD_G4 */
				  STM32_PINMUX('F', 11, AF14) /* LCD_G5 */
				  STM32_PINMUX('C',  7, AF14) /* LCD_G6 */
				  STM32_PINMUX('D',  3, AF14) /* LCD_G7 */
				  STM32_PINMUX('D',  9, AF14) /* LCD_B0 */
				  STM32_PINMUX('G', 12, AF14) /* LCD_B1 */
				  STM32_PINMUX('G', 10, AF14) /* LCD_B2 */
				  STM32_PINMUX('D', 10, AF14) /* LCD_B3 */
				  STM32_PINMUX('E', 12, AF14) /* LCD_B4 */
				  STM32_PINMUX('A',  3, AF14) /* LCD_B5 */
				  STM32_PINMUX('B',  8, AF14) /* LCD_B6 */
				  STM32_PINMUX('D',  8, AF14) /* LCD_B7 */
				>;
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};

		pins2 {
			pinmux = <STM32_PINMUX('G',  7, AF14) /* LCD_CLK */
				  STM32_PINMUX('C',  6, AF14) /* LCD_HSYNC */
				  STM32_PINMUX('A',  4, AF14) /* LCD_VSYNC */
				>;
			bias-disable;
			drive-push-pull;
			slew-rate = <1>;
		};

		pins3 {
			pinmux = <
				  STM32_PINMUX('E', 13, AF14) /* LCD_DE */
				>;
			bias-disable;
			drive-push-pull;
			slew-rate = <3>;
		};
	};

	txmp_ltdc_sleep_pins: txmp-lcd-sleep-pins {
		pins {
			pinmux = <
				  STM32_PINMUX('G',  7, ANALOG) /* LCD_CLK */
				  STM32_PINMUX('C',  6, ANALOG) /* LCD_HSYNC */
				  STM32_PINMUX('A',  4, ANALOG) /* LCD_VSYNC */
				  STM32_PINMUX('E', 13, ANALOG) /* LCD_DE */
				  /* LCD_R0 is not connected! */
				  STM32_PINMUX('G',  9, ANALOG) /* LCD_R1 */
				  STM32_PINMUX('C', 10, ANALOG) /* LCD_R2 */
				  STM32_PINMUX('B',  0, ANALOG) /* LCD_R3 */
				  STM32_PINMUX('A',  5, ANALOG) /* LCD_R4 */
				  STM32_PINMUX('C',  0, ANALOG) /* LCD_R5 */
				  STM32_PINMUX('B',  1, ANALOG) /* LCD_R6 */
				  STM32_PINMUX('E', 15, ANALOG) /* LCD_R7 */
				  STM32_PINMUX('E', 14, ANALOG) /* LCD_G0 */
				  STM32_PINMUX('E',  6, ANALOG) /* LCD_G1 */
				  STM32_PINMUX('A',  6, ANALOG) /* LCD_G2 */
				  STM32_PINMUX('E', 11, ANALOG) /* LCD_G3 */
				  STM32_PINMUX('B', 10, ANALOG) /* LCD_G4 */
				  STM32_PINMUX('F', 11, ANALOG) /* LCD_G5 */
				  STM32_PINMUX('C',  7, ANALOG) /* LCD_G6 */
				  STM32_PINMUX('D',  3, ANALOG) /* LCD_G7 */
				  STM32_PINMUX('D',  9, ANALOG) /* LCD_B0 */
				  STM32_PINMUX('G', 12, ANALOG) /* LCD_B1 */
				  STM32_PINMUX('G', 10, ANALOG) /* LCD_B2 */
				  STM32_PINMUX('D', 10, ANALOG) /* LCD_B3 */
				  STM32_PINMUX('E', 12, ANALOG) /* LCD_B4 */
				  STM32_PINMUX('A',  3, ANALOG) /* LCD_B5 */
				  STM32_PINMUX('B',  8, ANALOG) /* LCD_B6 */
				  STM32_PINMUX('D',  8, ANALOG) /* LCD_B7 */
				>;
		};
	};

	txmp_pwm1_pins: txmp-pwm1-pins {
		pins {
			pinmux = <STM32_PINMUX('A', 10, AF1)>; /* TIM1_CH3 */
			bias-disable;
			drive-push-pull;
			slew-rate = <0>;
		};
	};

	txmp_pwm1_sleep_pins: txmp-pwm1-sleep-pins {
		pins {
			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* TIM1_CH3 */
		};
	};
};
