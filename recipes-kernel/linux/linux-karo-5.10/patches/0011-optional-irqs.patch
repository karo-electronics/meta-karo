Index: karo-tx-linux/drivers/rtc/rtc-stm32.c
===================================================================
--- karo-tx-linux.orig/drivers/rtc/rtc-stm32.c
+++ karo-tx-linux/drivers/rtc/rtc-stm32.c
@@ -780,7 +780,7 @@ static int stm32_rtc_probe(struct platfo
 
 	ret = device_init_wakeup(&pdev->dev, true);
 	if (rtc->data->has_wakeirq) {
-		rtc->wakeirq_alarm = platform_get_irq(pdev, 1);
+		rtc->wakeirq_alarm = platform_get_irq_optional(pdev, 1);
 		if (rtc->wakeirq_alarm > 0) {
 			ret = dev_pm_set_dedicated_wake_irq(&pdev->dev,
 							    rtc->wakeirq_alarm);
Index: karo-tx-linux/drivers/usb/host/ehci-platform.c
===================================================================
--- karo-tx-linux.orig/drivers/usb/host/ehci-platform.c
+++ karo-tx-linux/drivers/usb/host/ehci-platform.c
@@ -358,7 +358,7 @@ static int ehci_platform_probe(struct pl
 	if (err)
 		goto err_power;
 
-	priv->wakeirq = platform_get_irq(dev, 1);
+	priv->wakeirq = platform_get_irq_optional(dev, 1);
 	if (priv->wakeirq > 0) {
 		err = dev_pm_set_dedicated_wake_irq(hcd->self.controller,
 						    priv->wakeirq);
