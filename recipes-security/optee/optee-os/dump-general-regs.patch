Index: git/core/arch/arm/plat-stm32mp1/main.c
===================================================================
--- git.orig/core/arch/arm/plat-stm32mp1/main.c
+++ git/core/arch/arm/plat-stm32mp1/main.c
@@ -405,8 +405,8 @@ static const char *const dump_table[] =
 void stm32mp_dump_core_registers(bool panicking)
 {
 	static bool display = false;
-	size_t i = U(0);
-	uint32_t __maybe_unused *reg = NULL;
+	size_t i;
+	uint32_t *reg;
 	struct sm_nsec_ctx *sm_nsec_ctx = sm_get_nsec_ctx();
 
 	if (panicking)
@@ -417,9 +417,19 @@ void stm32mp_dump_core_registers(bool pa
 
 	MSG("CPU : %zu\n", get_core_pos());
 
-	reg = (uint32_t *)&sm_nsec_ctx->ub_regs.usr_sp;
+	reg = &sm_nsec_ctx->ub_regs.usr_sp;
 	for (i = U(0); i < ARRAY_SIZE(dump_table); i++)
 		MSG("%10s : 0x%08x\n", dump_table[i], reg[i]);
+
+	reg = &sm_nsec_ctx->r0;
+	for (i = 0; i < 8; i++)
+		MSG("r%zu  : 0x%08x\n", i, reg[i]);
+
+	reg = &sm_nsec_ctx->r8;
+	for (i = 0; i < 2; i++)
+		MSG("r%zu  : 0x%08x\n", i + 8, reg[i]);
+	for (; i < 5; i++)
+		MSG("r%zu : 0x%08x\n", i + 8, reg[i]);
 }
 DECLARE_KEEP_PAGER(stm32mp_dump_core_registers);
 #endif
